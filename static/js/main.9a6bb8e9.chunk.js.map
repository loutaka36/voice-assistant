{"version":3,"sources":["bluetooth.js","commands.js","scripts.js","App.js","index.js"],"names":["connect","a","async","navigator","bluetooth","requestDevice","filters","name","optionalServices","device","gatt","server","getPrimaryService","service","getCharacteristic","this","characteristic","setState","connectionStatus","console","log","commandList","regex","response","greetings","Math","floor","random","length","followUpId","timeOfDay","now","Date","hour","getHours","minutes","getMinutes","exec","writeValue","Uint8Array","poweredOn","returnResponse","inquiry","command","match","followUpList","1","2","returnFollowUpResponse","App","props","state","displayText","inquiring","speechResults","SpeechRecognition","window","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","recognition","createRecognition","baymax","createBaymaxVoice","alert","handlePower","bind","continuous","interimResults","lang","onstart","onend","start","onresult","event","result","results","transcript","phrase","SpeechSynthesisUtterance","speak","error","stop","speechSynthesis","abort","topEyelid","bottomEyelid","className","Button","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a6bb8e9.chunk.js","sourcesContent":["//function for bluetooth connections used in App.js\n\nexport async function connect() {\n  try {\n    let device = await navigator.bluetooth.requestDevice({\n      filters: [\n        {\n          name: 'light',\n        },\n      ],\n      optionalServices: [0x1111]\n    })\n    let server = await device.gatt.connect();\n    let service = await server.getPrimaryService(0x1111);\n    this.characteristic = await service.getCharacteristic(0x2222);\n    this.setState({\n      connectionStatus: 'Device connected'\n    })\n  } catch (err) {\n    console.log(err)\n    this.setState({\n      connectionStatus: 'Device connection failed'\n    })\n  }\n}\n\n//sends bytes to connected bluetooth device (on position)\nexport async function turnDeviceOn() {\n  try {\n    await this.characteristic.writeValue(\n      new Uint8Array([0xff, 0xff])\n    )\n  } catch (err) {\n    if (err.name === 'TypeError') {\n      return 'Oh no, looks like you don\\'t have a device connected. Try connecting one and try again'\n    } else {\n      return 'Oh no, your device got disconnected'\n    }\n  }\n}\n\n//sends bytes to connected bluetooth device (off position)\nexport async function turnDeviceOff() {\n  try {\n    await this.characteristic.writeValue(\n      new Uint8Array([0x00, 0x00])\n    )\n  } catch (err) {\n    if (err.name === 'TypeError') {\n      return 'Oh no, looks like you don\\'t have a device connected. Try connecting one and try again'\n    } else {\n      return 'Oh no, your device got disconnected'\n    }\n  }\n}\n","import {turnDeviceOn, turnDeviceOff} from './bluetooth'\nimport {getTime, getGreeting, powerDown} from './scripts'\n\nconst commandList = [\n  {\n    regex: /hello|hi|howdy|yo|sup|what's up|hey|aloha/,\n    response: {\n      response: getGreeting,\n    }\n  },\n  {\n    regex: /fist bump/,\n    response: {\n      response: 'FA LALALA',\n    }\n  },\n  {\n    regex: /[\\w\\s]*directions[\\w\\s]*to[\\w\\s]*|[\\w\\s]*navigate[\\w\\s]*to[\\w\\s]*/,\n    response: {\n      response: \"um, I'm not google maps, you can figure that out yourself\",\n    }\n  },\n  {\n    regex: /[\\w\\s]*remind[\\w\\s]*me[\\w\\s]*|[\\w\\s]*set[\\w\\s]*reminder[\\w\\s]*/,\n    response: {\n      response: \"it's not my problem that you're forgetful. why don't you go ask Siri or Alexa to do that for you\",\n    }\n  },\n  {\n    regex: /pain|hurts|hurt/,\n    response: {\n      response: 'on a scale of 1 to 10, how would you rate your pain?',\n      followUpId: 2\n    }\n  },\n  {\n    regex: /[\\w\\s]*time[\\w\\s]*/,\n    response: {\n      response: getTime,\n    }\n  },\n  {\n    regex: /nevermind|just kidding|no/,\n    response: {\n      response: \"ok, no problem\",\n    }\n  },\n  {\n    regex: /[\\w\\s]*sick[\\w\\s]*/,\n    response: {\n      response: \"oh no, what are you symptoms?\",\n      followUpId: 1\n    }\n  },\n  {\n    regex: /[\\w\\s]*light(?:s)?[\\w\\s]*on[\\w\\s]*|[\\w\\s]*on[\\w\\s]*light(?:s)?[\\w\\s]*/,\n    response: {\n      response: \"ok, I'll turn them on\",\n      exec: turnDeviceOn\n    }\n  },\n  {\n    regex: /[\\w\\s]*light(?:s)?[\\w\\s]*off[\\w\\s]*|[\\w\\s]*off[\\w\\s]*light(?:s)?[\\w\\s]*/,\n    response: {\n      response: \"ok, I'll turn them off\",\n      exec: turnDeviceOff\n    }\n  },\n  {\n    regex: /[\\w\\s]*power[\\w\\s]*down[\\w\\s]*|[\\w\\s]*power[\\w\\s]*off[\\w\\s]*/,\n    response: {\n      response: \"goodbye\",\n      exec: powerDown\n    }\n  },\n]\n\nexport const returnResponse = (inquiry) => {\n  for (let command of commandList) {\n    if (inquiry.match(command.regex)) {\n      return command.response\n    }\n  }\n  return {\n    response: 'Sorry, I don\\'t understand what you just said'\n  }\n}\n\nconst followUpList = {\n  1: (inquiry) => {\n    if (inquiry.match(\"head\")) {\n      return \"put some ice on it\"\n    } else {\n      return 'Sorry, I don\\'t know about that. I think WebMD might be able to help you.'\n    }\n  },\n  2: (inquiry) => {\n    if (inquiry.match(/ten|10/)) {\n      return 'that\\'s very severe. Please call an ambulance right away'\n    } else if (inquiry.match(/seven|eight|nine|7|8|9/)){\n      return 'that doesn\\'t sound good. You need to go to a hopsital.'\n    } else if (inquiry.match(/four|five|six|4|5|6/)) {\n      return 'ouch. some pain medications such as advil may help. If you don\\'t see improvement, I would go see a doctor.'\n    } else if (inquiry.match(/one|two|three|1|2|3/)) {\n      return 'doesn\\'t seem too serious. I suggest taking it easy for now.'\n    } else {\n      return 'your response didn\\'t make sense to me. I will assume that you are not hurt'\n    }\n  }\n}\n\nexport const returnFollowUpResponse = (inquiry, followUpId) => {\n  if (followUpList[followUpId]) {\n    return followUpList[followUpId](inquiry)\n  }\n  return 'Sorry, I don\\'t understand what you just said'\n}\n\n\n","export const getTime = () => {\n  const now = new Date()\n  let hour = now.getHours()\n  let minutes = now.getMinutes()\n  let timeOfDay\n  if (hour === 0) {\n    hour = 12\n    timeOfDay = 'AM'\n  } else if (hour < 12) {\n    timeOfDay = \"AM\"\n  } else if (hour === 12) {\n    timeOfDay = 'PM'\n  } else {\n    hour -= 12\n    timeOfDay = 'PM'\n  }\n\n  if (minutes < 10) {\n    minutes= '0' + minutes\n  }\n\n  return `It's currently ${hour}:${minutes} ${timeOfDay}`\n}\n\nexport const getGreeting = () => {\n  const greetings = ['hi there', 'yo yo yo', 'aloha', 'what\\'s good', 'howdy', 'greetings human']\n  return greetings[Math.floor(Math.random() * greetings.length)]\n}\n\nexport function powerDown() {\n  this.setState({\n    poweredOn: false\n  })\n}\n","import React from 'react';\nimport './App.css';\nimport {returnResponse, returnFollowUpResponse} from './commands'\nimport {connect} from './bluetooth'\nimport {Button} from 'semantic-ui-react'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayText: '',\n      inquiring: false,\n      followUpId: null,\n      connectionStatus: 'Device not connected',\n      speechResults: '',\n      poweredOn: false\n    }\n\n    const SpeechRecognition = window.SpeechRecognition\n    || window.webkitSpeechRecognition\n    || window.mozSpeechRecognition\n    || window.msSpeechRecognition\n    || window.oSpeechRecognition;\n\n    if (SpeechRecognition != null) {\n      this.recognition = this.createRecognition(SpeechRecognition)\n      this.baymax = this.createBaymaxVoice()\n    } else {\n      window.alert('The current browser does not support the SpeechRecognition API.')\n    }\n\n    this.characteristic = null;\n    this.handlePower = this.handlePower.bind(this)\n  }\n\n  createRecognition(SpeechRecognition) {\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.lang =  'en-US';\n    recognition.onstart = () => {\n      console.log(\"Listening!\")\n    }\n    recognition.onend = () => {\n      console.log(\"Stopping\");\n      if (this.state.poweredOn) {\n        this.recognition.start();\n      }\n    }\n    recognition.onresult = async event => { //sets up logic for talking back\n      const result = event.results[0][0].transcript;\n      this.setState({\n        speechResults: result\n      })\n      console.log(result);\n\n      if (result === 'hey Baymax' && !this.state.inquiring) { //all request must start with 'hey Baymax'\n        let phrase = new SpeechSynthesisUtterance('yes?')\n        this.baymax.speak(phrase)\n        this.setState({\n          displayText: 'Yes?',\n          inquiring: true\n        })\n\n      } else if (this.state.inquiring && !this.state.followUpId) { //if there is not follow up pending\n        let {response, followUpId, exec} = returnResponse(result);\n        if (exec && !followUpId) { //if there is an executable and no followup Id\n          let error = await exec.bind(this)()\n          if (error === 'Oh no, your device got disconnected') {\n            let phrase = new SpeechSynthesisUtterance(error)\n            this.baymax.speak(phrase)\n            this.setState({\n              displayText: error,\n              inquiring: false,\n              connectionStatus: \"Device disconnected\"\n            })\n          } else if (error) {\n            let phrase = new SpeechSynthesisUtterance(error)\n            this.baymax.speak(phrase)\n            this.setState({\n              displayText: error,\n              inquiring: false,\n            })\n          } else {\n            let phrase = new SpeechSynthesisUtterance(response)\n            this.baymax.speak(phrase)\n            this.setState({\n            displayText: response,\n            inquiring: false,\n            })\n          }\n        } else if (exec && followUpId) { // if there is an executable and follow up Id\n          let error = await exec.bind(this)()\n          if (error) {\n            let phrase = new SpeechSynthesisUtterance(error)\n            this.baymax.speak(phrase)\n            this.setState({\n              displayText: error,\n              inquiring: false,\n            })\n          } else {\n            let phrase = new SpeechSynthesisUtterance(response)\n            this.baymax.speak(phrase)\n            this.setState({\n              displayText: response,\n              inquiring: true,\n              followUpId\n            })\n          }\n        } else if (followUpId) {\n          let phrase = new SpeechSynthesisUtterance(response)\n            this.baymax.speak(phrase)\n            this.setState({\n              displayText: response,\n              inquiring: true,\n              followUpId\n            })\n        } else {\n          if (typeof response === 'function') {\n            response = response()\n          }\n          let phrase = new SpeechSynthesisUtterance(response)\n          this.baymax.speak(phrase)\n          this.setState({\n            displayText: response,\n            inquiring: false,\n          })\n        }\n\n      } else if (this.state.inquiring && this.state.followUpId) { //if there is a follow up pending\n        const response = returnFollowUpResponse(result, this.state.followUpId);\n        let phrase = new SpeechSynthesisUtterance(response)\n        this.baymax.speak(phrase)\n        this.setState({\n          displayText: response,\n          inquiring: false,\n          followUpId: null\n        });\n      }\n      this.recognition.stop()\n    }\n    return recognition;\n  }\n\n  createBaymaxVoice() { //creates speech synthesis object\n    const baymax = window.speechSynthesis\n    return baymax;\n  }\n\n  componentWillUnmount() {\n    this.recognition.abort()\n  }\n\n  handlePower() {\n    if (this.state.poweredOn) {\n      this.recognition.stop()\n      let phrase = new SpeechSynthesisUtterance('goodbye')\n      this.baymax.speak(phrase)\n      this.setState({\n        poweredOn: false,\n        displayText: 'goodbye',\n        speechResults: ''\n      })\n    } else {\n      this.recognition.start()\n      let phrase = new SpeechSynthesisUtterance('Hi, I am Baymax, your personal assistant. Say \"Hey Baymax\" if you need anything.')\n      this.baymax.speak(phrase)\n      this.setState({\n        poweredOn: true,\n        displayText: 'Hi, I am Baymax, your personal assistant. Say \"Hey Baymax\" if you need anything.',\n        speechResults: ''\n      })\n    }\n  }\n\n  render() {\n    let topEyelid\n    let bottomEyelid\n    if (this.state.poweredOn) {\n      topEyelid = \"eyelid-top\"\n      bottomEyelid = \"eyelid-bottom\"\n    } else {\n      topEyelid = \"eyelid-top-inactive\"\n      bottomEyelid = \"eyelid-bottom-inactive\"\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"baymax-container\">\n          <div className=\"baymax\"></div>\n          <div className={topEyelid}></div>\n          <div className={bottomEyelid}></div>\n        </div>\n        <div>\n          {this.state.displayText}\n        </div>\n        <div className=\"user-input\">\n          <div className=\"user-input_label\">Your Input:</div>\n          <div className=\"user-input_results\">{this.state.speechResults}</div>\n        </div>\n        <Button className=\"power\" onClick={this.handlePower}>{this.state.poweredOn ? 'Shut Down' : \"Power On\"}</Button>\n        <div>\n          <Button onClick={connect.bind(this)}>Connect To Device</Button>\n          <div className=\"connection-status\">{this.state.connectionStatus}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}